工厂模式有简单工厂，工厂方法模式，以及抽象工厂模式。
只不过简单工厂一般不算一种设计模式，更是一种编写习惯。所以工厂模式就包涵工厂方法模式，以及抽象工厂模式。

工厂方法模式定义了一个创建对象的接口，但由子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。

抽象工厂模式提供一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体类。

在这个demo中，原料用的是抽象工厂模式。引用抽象工厂，来创建披萨原料家族。一种pizza会有很多种风味，因为原料产地不同，但材料是一样的。
如果不抽出来，那么n种pizza，m种风味，总共就需要 m*n 个类，用抽象工厂只需 m+n 个类。

而披萨商店则用的工厂方法模式，两种风味的商店继承了一个抽象类PizzaStore，根据传进来的参数，实例化所需的pizza，这里我偷懒了，只写了一种pizza。

当需要创建产品家族和想让制造的相关产品集合起来时，可以使用抽象工厂模式。
